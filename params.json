{"name":"KONA SDK's","tagline":"KONA, SDK","body":"#Android SDK\r\n\r\n## Download\r\n\r\nhttps://github.com/konacloud/sdk/releases/latest\r\n\r\n## Install\r\n\r\nJust add the project as a library\r\n\r\n## Dependencies\r\n\r\nNo dependencies for restClient\r\n\r\nIf you use buckets add this apache http mime\r\nhttp://repo1.maven.org/maven2/org/apache/httpcomponents/httpmime/4.2.1/httpmime-4.2.1.jar\r\n\r\nfor converting Pojos into Strings we recomend to use Gson https://code.google.com/p/google-gson/\r\n\r\n## Configuration\r\n\r\nAndroidManigest.xml\r\n\r\n```\r\n<uses-permission android:name=\"android.permission.INTERNET\"></uses-permission>\r\n```\r\n\r\n## Uses\r\n\r\n### HTTP GET\r\n\r\n```\r\n\tKonaRequest request = new KonaRequest() {\r\n\t{\r\n\t\tthis.url = \"http://app.konacloud.io/...\";\r\n\t\tthis.method = HTTPMethod.GET;\r\n\t\tthis.accessToken = \"5b7...\";\r\n\t}\r\n\t\r\n\t@Override\r\n\tpublic void onSuccess(String jsonObject) {\r\n\t\t//do something on success\r\n\t}\r\n\t\r\n\t@Override\r\n\tpublic void onFailure(KonaResponse res) {\r\n\t\t//do something on failure\r\n\t\tToast.makeText(getActivity(), res.getMsg(), Toast.LENGTH_LONG).show();\r\n\t}\r\n\t};\r\n\trequest.make();\r\n```\r\n\r\n### HTTP POST\r\n\r\n```\r\n\tfinal JSONObject json = new JSONObject();\r\n\tjson.put(\"name\", \"kona\");\r\n\t\r\n\tKonaRequest request = new KonaRequest() {\r\n\t{\r\n\t\tthis.url = \"http://app.konacloud.io/..\";\r\n\t\tthis.method = HTTPMethod.POST;\r\n\t\tthis.data = json.toString();\r\n\t\tthis.accessToken = \"5b7fb5bd..\";\r\n\t}\r\n\t\r\n\t@Override\r\n\tpublic void onSuccess(String jsonObject) {\r\n\t\t\r\n\t}\r\n\t\r\n\t@Override\r\n\tpublic void onFailure(KonaResponse res) {\r\n\t\r\n\t}\r\n\t};\r\n\trequest.make();\r\n```\r\n\r\n### HTTP PUT\r\n\r\n```\r\n\tfinal JSONObject json = new JSONObject();\r\n\tjson.put(\"name\", \"kona\");\r\n\t\r\n\tKonaRequest request = new KonaRequest() {\r\n\t{\r\n\t\tthis.url = \"http://app.konacloud.io/..\";\r\n\t\tthis.method = HTTPMethod.PUT;\r\n\t\tthis.data = json.toString();\r\n\t\tthis.accessToken = \"5b7fb...\";\r\n\t}\r\n\t\r\n\t@Override\r\n\tpublic void onSuccess(String jsonObject) {\r\n\t\t\r\n\t}\r\n\t\r\n\t@Override\r\n\tpublic void onFailure(KonaResponse res) {\r\n\t\r\n\t}\r\n\t};\r\n\trequest.make();\r\n```\r\n\r\n#### HTTP Delete\r\n\r\n```\r\n\tKonaRequest request = new KonaRequest() {\r\n\t{\r\n\t\tthis.url = \"http://app.konacloud.io/..\";\r\n\t\tthis.method = HTTPMethod.DELETE;\r\n\t\tthis.accessToken = \"5b7fb5bd..\";\r\n\t}\r\n\t\r\n\t@Override\r\n\tpublic void onSuccess(String jsonObject) {\r\n\t\t\r\n\t}\r\n\t\r\n\t@Override\r\n\tpublic void onFailure(KonaResponse res) {\r\n\t\r\n\t}\r\n\t};\r\n\trequest.make();\r\n```\r\n\r\n\r\n\r\n### GSON Integration\r\n\r\nDownload https://code.google.com/p/google-gson/downloads/list\r\n\r\n#### Instanciate the Gson object\r\n```\r\nGson gson = new Gson();\r\n```\r\n\r\n#### ToString();\r\n\r\n```\r\nMyPojo obj = new MyPojo();\r\nString json = gson.toJson(obj);\r\n```\r\n\r\n#### POST Example\r\n\r\n```\r\n\tGson gson = new Gson();\r\n\t\r\n\tMyPojo obj = new MyPojo();\r\n\tobj.setName(\"Kona\");\r\n\t\r\n\tfinal String json = gson.toJson(obj);\r\n\t\r\n\tKonaRequest request = new KonaRequest() {\r\n\t{\r\n\t\tthis.url = \"http://app.konacloud.io/..\";\r\n\t\tthis.method = HTTPMethod.POST;\r\n\t\tthis.data = json;\r\n\t\tthis.accessToken = \"5b7fb5bd..\";\r\n\t}\r\n\t\r\n\t@Override\r\n\tpublic void onSuccess(String jsonObject) {\r\n\t\t\r\n\t}\r\n\t\r\n\t@Override\r\n\tpublic void onFailure(KonaResponse res) {\r\n\t\r\n\t}\r\n\t};\r\n\trequest.make();\r\n```\r\n\r\n### Buckets\r\n\r\n#### Post a FILE\r\n\r\n```\r\n\tKonaCallBack callback = new KonaCallBack() {\r\n\r\n\t\t\t\t\t@Override\r\n\t\t\t\t\tpublic void receive(String url) {\r\n\t\t\t\t\t\tLog.v(this.getClass().toString(), \"url: \" + url);\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t\tKonaBucket\r\n\t\t\t\t\t\t.getInstance()\r\n\t\t\t\t\t\t.uploadImage(\r\n\t\t\t\t\t\t\t\t\"http://bucket.konacloud.io/external/api/bucket/taio/hello/b1\",\r\n\t\t\t\t\t\t\t\tbyte_arr, callback);\r\n```\t\t\t\t\t\t\t\t\r\n#### Example\r\n\r\nTake a photo with the camera and send to a KONA backet storage.\r\n\r\n```\r\n\r\n\tstatic final int REQUEST_IMAGE_CAPTURE = 1;\r\n\r\n\tprivate void dispatchTakePictureIntent() {\r\n\t\tIntent takePictureIntent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);\r\n\t\tif (takePictureIntent.resolveActivity(getPackageManager()) != null) {\r\n\t\t\tstartActivityForResult(takePictureIntent, REQUEST_IMAGE_CAPTURE);\r\n\t\t}\r\n\t}\r\n\r\n\t@Override\r\n\tprotected void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n\t\tif (requestCode == REQUEST_IMAGE_CAPTURE && resultCode == RESULT_OK) {\r\n\t\t\tBundle extras = data.getExtras();\r\n\t\t\tBitmap imageBitmap = (Bitmap) extras.get(\"data\");\r\n\t\t\t// mImageView.setImageBitmap(imageBitmap);\r\n\t\t\tByteArrayOutputStream stream = new ByteArrayOutputStream();\r\n\t\t\timageBitmap.compress(Bitmap.CompressFormat.JPEG, 30, stream);\r\n\t\t\tbyte[] byte_arr = stream.toByteArray();\r\n\r\n\t\t\ttry {\r\n\r\n\t\t\t\tKonaCallBack callback = new KonaCallBack() {\r\n\r\n\t\t\t\t\t@Override\r\n\t\t\t\t\tpublic void receive(String url) {\r\n\t\t\t\t\t\tLog.v(this.getClass().toString(), \"url: \" + url);\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t\tKonaBucket\r\n\t\t\t\t\t\t.getInstance()\r\n\t\t\t\t\t\t.uploadImage(\r\n\t\t\t\t\t\t\t\t\"http://bucket.konacloud.io/external/api/bucket/taio/hello/b1\",\r\n\t\t\t\t\t\t\t\tbyte_arr, callback);\r\n\t\t\t} catch (Exception e) {\r\n\t\t\t\te.printStackTrace();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n```\r\n\r\n#### Load a File in ImageView\r\n\r\n```\r\n\tKonaBucket.getInstance().loadImage(\"http://host\",imageView);\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}